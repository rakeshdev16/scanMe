
import 'package:scan_me_plus/export.dart';

class AppPages {
  AppPages();

  static const int _transitionDuration = 300;
  static var pages = <GetPage>[
    GetPage(
        name: AppRoutes.routeSplash,
        transition: Transition.rightToLeft,
        curve: Curves.ease,
        transitionDuration: const Duration(milliseconds: _transitionDuration),
        page: () => const SplashScreen()),
    GetPage(
      name: AppRoutes.routeOnBoarding,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const OnBoardingScreen(),
      binding: OnBoardingBinding(),
    ),
    GetPage(
      name: AppRoutes.routeLogin,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => LoginScreen(),
      binding: LoginBinding(),
    ),
    GetPage(
      name: AppRoutes.routeOtpVerification,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const OtpVerificationScreen(),
      binding: OtpVerificationBinding(),
    ),
    GetPage(
      name: AppRoutes.routeAddProfileDetails,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => AddProfileDetailScreen(),
      binding: AddProfileDetailBinding(),
    ),
    GetPage(
      name: AppRoutes.routeEditProfileDetails,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => EditProfileScreen(),
      binding: EditProfileBinding(),
    ),
    GetPage(
      name: AppRoutes.routeHome,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const MainScreen(),
      binding: MainBinding(),
    ),
    GetPage(
      name: AppRoutes.routeScanQr,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => ScanQRScreen(),
      binding: ScanQRBinding(),
    ),
    GetPage(
      name: AppRoutes.routeReplacement,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const ReplacementScreen(),
      binding: ReplacementBinding(),
    ),
    GetPage(
      name: AppRoutes.routeChooseVehicleBrand,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const ChooseVehicleBrandScreen(),
      binding: ChooseVehicleBrandBinding(),
    ),
    GetPage(
      name: AppRoutes.routeChooseVehicleType,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const ChooseVehicleTypeScreen(),
      binding: ChooseVehicleTypeBinding(),
    ),
    GetPage(
      name: AppRoutes.routeChooseVehicleModel,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const ChooseVehicleModelScreen(),
      binding: ChooseVehicleModelBinding(),
    ),
    GetPage(
      name: AppRoutes.routeConfirmVehicleDetails,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => ConfirmVehicleDetailScreen(),
      binding: ConfirmVehicleDetailsBinding(),
    ),
    GetPage(
      name: AppRoutes.routeUpgradePlans,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const UpgradePlansScreen(),
      binding: UpgradePlansBinding(),
    ),
    GetPage(
      name: AppRoutes.routeMyPlans,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const MyPlansScreen(),
      binding: MyPlansBinding(),
    ),
    GetPage(
      name: AppRoutes.routeThanksForChoosingUs,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const ThanksScreen(),
      binding: ThanksBinding(),
    ),
    GetPage(
      name: AppRoutes.routeShippingAddress,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => ShippingAddressScreen(),
      binding: ShippingAddressBinding(),
    ),
    GetPage(
      name: AppRoutes.routeReferFriend,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const ReferAFriendScreen(),
      binding: ReferAFriendBinding(),
    ),
    GetPage(
      name: AppRoutes.routeAbout,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const AboutScreen(),
      binding: AboutBinding(),
    ),
    GetPage(
      name: AppRoutes.routeHelpSupport,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const HelpSupportScreen(),
      binding: HelpSupportBinding(),
    ),
    GetPage(
      name: AppRoutes.routeAlertNotifications,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const AlertNotificationsScreen(),
      binding: AlertNotificationsBinding(),
    ),
    GetPage(
      name: AppRoutes.routeNotificationAlert,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const NotificationAlertScreen(),
      binding: NotificationAlertBinding(),
    ),
    GetPage(
      name: AppRoutes.routeCalling,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const CallingScreen(),
      binding: CallingBinding(),
    ),
    GetPage(
      name: AppRoutes.routeBlockedUsers,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const BlockedUsersListScreen(),
      binding: BlockedUsersListBinding(),
    ),
    GetPage(
      name: AppRoutes.routeStaticPage,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      page: () => const StaticPageScreen(),
      binding: StaticPageBinding(),
    ),
    GetPage(
      name: AppRoutes.routeSocietyHotelSignup,
      transition: Transition.rightToLeft,
      curve: Curves.ease,
      transitionDuration: const Duration(milliseconds: _transitionDuration),
      binding: SocietyHotelSignupBinding(),
      page: () => const SocietyHotelSignupScreen(),
    ),
  ];
}
